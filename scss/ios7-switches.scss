@import 'bourbon/bourbon';

// light colors
$white        : #ffffff;
$grey         : #d0d0d0;
$light-green  : #2ecc71;
$light-red    : #e74c3c;
$light-blue   : #3498db;
$light-orange : #e67e22;
$light-grey   : #e3e3e3;

// configurable options
$switch-name         : 'switch';
$include-colors      : true;
$switch-width        : 50px;
$switch-height       : ($switch-width * 60) / 100;
$switch-border-width : 1px;
$classes             : (
  warning : $light-orange,
  danger  : $light-red,
  info    : $light-blue
);

// non configurable options
$switch-radius            : $switch-height / 2;
$switch-background-width  : $switch-width - ($switch-border-width * 2);
$switch-background-height : $switch-height - ($switch-border-width * 2);
$switch-handler-width     : $switch-height - ($switch-border-width * 2);
$switch-handler-height    : $switch-handler-width;
$switch-handler-left      : $switch-width - $switch-handler-width - ($switch-border-width * 2);
$switch-transition-speed  : .3s;

.#{$switch-name} {
  display: inline-block;
  @include user-select(none);

  input[type="checkbox"],
  input[type="radio"] {

    // Hide the real input
    display: none;

    // Switch container
    + label {
      display: block;
      position: relative;
      vertical-align: middle;

      border: $switch-border-width solid $light-grey;
      border-radius: $switch-radius;
      background-color: $light-grey;
      cursor: pointer;

      // Both share the same transition speed/duration
      &, &:after, &:before {
        @include transition-duration($switch-transition-speed);
        @include transition-timing-function($ease-in-out-quad);
      }

      &:after, &:before {
        display: inherit;
        content: " ";
        background: $white;
        @include transition-property(transform);
      }

      @include size($switch-width $switch-height);
      @include box-sizing(border-box);
      @include transition-property(border, background-color);

      &:before {
        border-radius: $switch-radius;
        background-color: $white;
        @include size($switch-background-width $switch-background-height);
      }

      // Switch handler
      &:after {
        @include position(absolute, 0 null null 0);
        border-radius: $switch-handler-height / 2;
        box-shadow: 0 2px 3px rgba(0,0,0,.3);

        @include size($switch-handler-width $switch-handler-height);
      }
    }

    &:checked {
      + label {
        border-color: $light-green;
        background-color: $light-green;

        &:before {
          @include transform(scale(0));
        }

        &:after {
          @include transform(translateX($switch-handler-left));
        }
      }
    }

    // Disabled inputs
    &:disabled,
    &:disabled:checked {
      + label {
        background-color: $light-grey;
        border-color: $light-grey;
        cursor: default;
        box-shadow: none;

        &:before {
          background-color: $light-grey;
        }
      }
    }
  }

  @if $include-colors {

    // Apply colorful classes
    @each $key, $value in $classes {
      &.#{$switch-name}-#{$key} input:checked + label {
        background-color: $value;
        border-color: $value;
        box-shadow: inset 0px 0px 0px 16px $value;
      }
    }
  }
}