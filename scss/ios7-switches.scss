// light colors
$light-green: #2ecc71;
$light-red: #e74c3c;
$light-blue: #3498db;
$light-orange: #e67e22;

// grey colors
$grey: #ecf0f1;
$light-grey: #dfdfdf;
$white: #ffffff;

// sizing
$switch-width: 50px;
$switch-height: ($switch-width * 60) / 100;
$switch-radius: ($switch-height * 66.666666667) / 100;
$border-width: 1px;

// transitions
$transition-speed: .4s;

@mixin box-sizing($sizing) {
  -webkit-box-sizing: $sizing;
  -moz-box-sizing: $sizing;
  -ms-box-sizing: $sizing;
  -o-box-sizing: $sizing;
  box-sizing: $sizing;
}

@mixin box-shadow($shadow) {
  -webkit-box-shadow: $shadow;
  box-shadow: $shadow;
}

@mixin border-radius($radius) {
  -webkit-border-radius: $radius;
  border-radius: $radius;
}

@mixin transition($transition) {
  -webkit-transition: $transition;
  -moz-transition: $transition;
  -ms-transition: $transition;
  -o-transition: $transition;
  transition: $transition;
}

input[type="checkbox"].switch,
input[type="radio"].switch {
  display: none;

  & + label {
    display: inline-block;
    position: relative;
    width: $switch-width;
    height: $switch-height;
    vertical-align: middle;

    background-color: $white;
    border: $border-width solid $light-grey;
    border-radius: $switch-radius;
    cursor: pointer;

    @include box-shadow(inset 0px 0px 0px 0px $light-grey);
    @include transition((border $transition-speed, box-shadow $transition-speed));
    @include box-sizing(border-box);

    &:after {
      content: "";
      position: absolute;
      top: 0;
      left: 0;
      width: $switch-height - ($border-width * 2);
      height: $switch-height - ($border-width * 2);

      background: $white;
      border-radius: 100%;
      box-shadow: 0 1px 3px rgba(0, 0, 0, 0.4);

      @include box-shadow(0 1px 3px rgba(0,0,0,.4));
      @include transition(left ($transition-speed / 2) ease-in-out);
    }
  }

  &:checked {

    & + label {
      background-color: $light-green;
      border-color: $light-green;

      @include box-shadow(inset 0px 0px 0px (($switch-height * 53.33) / 100) $light-green);
      @include transition((background-color ($transition-speed * 3), border $transition-speed, box-shadow $transition-speed));

      &:after {
        left: $switch-width - $switch-height;
      }
    }

    &.switch-warning + label {
      background-color: $light-orange;
      border-color: $light-orange;
      @include box-shadow(inset 0px 0px 0px 16px $light-orange);
    }

    &.switch-danger + label {
      background-color: $light-red;
      border-color: $light-red;
      @include box-shadow(inset 0px 0px 0px 16px $light-red);
    }

    &.switch-info + label {
      background-color: $light-blue;
      border-color: $light-blue;
      @include box-shadow(inset 0px 0px 0px 16px $light-blue);
    }
  }

  &:disabled,
  &:disabled:checked {
    & + label {
      background-color: $grey !important;
      border-color: $grey !important;
      cursor: default;
      @include box-shadow(none);
    }
  }
}